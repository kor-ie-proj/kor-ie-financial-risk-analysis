version: '3.9'

services:
    minio:
        image: minio/minio:latest
        container_name: minio
        ports:
            - '9000:9000'
            - '9001:9001'
        environment:
            # MinIO 서버 자체의 관리자 계정 설정 (명확하게 수정)
            - MINIO_ROOT_USER=${MINIO_ROOT_USER}
            - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
        command: server /data --console-address ":9001"
        volumes:
            - minio_data:/data
        networks: [risknet]

    mysql:
        image: mysql:8.0
        container_name: mysql
        ports:
            - '3306:3306'
        command: --default-authentication-plugin=mysql_native_password
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
        volumes:
            - mysql_data:/var/lib/mysql
            - ./db/init:/docker-entrypoint-initdb.d
        networks: [risknet]

    mlflow:
        build: ./mlflow
        container_name: mlflow
        environment:
            # MLflow 전용 DB URI 변수 사용 (명확하게 수정)
            - BACKEND_STORE_URI=${MLFLOW_BACKEND_STORE_URI}
            - ARTIFACT_ROOT=s3://${MLFLOW_ARTIFACT_BUCKET}
            # 클라이언트로서 MinIO에 연결하는 정보
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        ports:
            - '5000:5000'
        depends_on:
            - mysql
            - minio
        networks: [risknet]

    training:
        build: ./training
        container_name: training
        ports:
            - '8002:8000'
        environment:
            - PYTHONUNBUFFERED=1
            - MLFLOW_TRACKING_URI=http://mlflow:5000
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            # 클라이언트로서 MinIO/DB에 연결하는 정보
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_S3_VERIFY_SSL=false
            - DATABASE_URI=${DB_URI}
            - MLFLOW_EXPERIMENT_NAME=LSTM_Financial_Forecast
        depends_on: [mysql, mlflow, minio]
        networks: [risknet]

    inference:
        build: ./inference
        container_name: inference
        ports:
            - '8001:8000'
        environment:
            - PYTHONUNBUFFERED=1
            - MLFLOW_TRACKING_URI=http://mlflow:5000
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            # 클라이언트로서 MinIO/DB에 연결하는 정보
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_S3_VERIFY_SSL=false
            - DATABASE_URI=${DB_URI}
            - MODEL_NAME=lstm_financial_forecast_model
            - MODEL_STAGE=Production
        depends_on: [mysql, mlflow, minio]
        networks: [risknet]

networks:
    risknet:

volumes:
    mysql_data:
    minio_data:
